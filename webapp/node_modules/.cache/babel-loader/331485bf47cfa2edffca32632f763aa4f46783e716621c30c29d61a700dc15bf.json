{"ast":null,"code":"var _jsxFileName = \"/Users/daniellundquist/Documents/Bachelor-gruppe-3/webapp/src/frontend/components/ShipmentEvalBar.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport apiServiceInstance from \"../APIService\";\nimport { Chart, registerables } from \"chart.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nChart.register(...registerables);\nfunction ShipmentEvalBar() {\n  _s();\n  const [evalList, setEvalList] = useState([]);\n  useEffect(() => {\n    // Fetch data from API endpoint\n    apiServiceInstance.getShipmentEval().then(response => {\n      console.log(response.data);\n      setEvalList(response.data.map(line => {\n        const [time, shipment, operation] = line.split(\", \");\n        return {\n          time,\n          shipment,\n          operation\n        };\n      }));\n    });\n  }, []);\n  function filterCreateOperation(evalList) {\n    return evalList.filter(evaluation => evaluation.operation === \"create\");\n  }\n  function getMinMaxTime(evalList) {\n    const createOperations = filterCreateOperation(evalList);\n    const times = createOperations.map(evaluation => evaluation.time);\n    const minTime = Math.min(...times);\n    const maxTime = Math.max(...times);\n    return {\n      minTime,\n      maxTime\n    };\n  }\n  useEffect(() => {\n    if (evalList.length > 0) {\n      const data = formatData(evalList);\n      const ctx = document.getElementById('shipment-eval-chart').getContext('2d');\n      new Chart(ctx, {\n        type: 'bar',\n        data: data,\n        options: {\n          scales: {\n            y: {\n              beginAtZero: true,\n              title: {\n                display: true,\n                text: 'Time (minutes)'\n              }\n            },\n            x: {\n              title: {\n                display: true,\n                text: 'Shipment'\n              }\n            }\n          },\n          plugins: {\n            legend: {\n              display: true,\n              labels: {\n                font: {\n                  size: 14\n                }\n              }\n            },\n            tooltip: {\n              callbacks: {\n                label: function (context) {\n                  var label = context.dataset.label || '';\n                  if (label) {\n                    label += ': ';\n                  }\n                  if (context.parsed.y !== null) {\n                    label += context.parsed.y + ' minutes';\n                  }\n                  return label;\n                }\n              }\n            }\n          }\n        }\n      });\n    }\n  }, [evalList]);\n  function formatData(evalList) {\n    const data = {\n      labels: ['Minimum', 'Maximum', 'Average', 'Standard Deviation'],\n      datasets: [{\n        label: 'Time',\n        data: [Math.min(...evalList.map(evaluation => evaluation.time)), Math.max(...evalList.map(evaluation => evaluation.time)), evalList.reduce((acc, curr) => acc + parseFloat(curr.time), 0) / evalList.length, Math.sqrt(evalList.map(evaluation => parseFloat(evaluation.time)).reduce((acc, curr) => acc + Math.pow(curr - evalList.reduce((acc, curr) => acc + parseFloat(curr.time), 0) / evalList.length, 2), 0) / evalList.length)],\n        backgroundColor: 'rgb(75, 192, 192)',\n        borderColor: 'rgb(75, 192, 192)',\n        borderWidth: 1\n      }]\n    };\n    return data;\n  }\n  return /*#__PURE__*/_jsxDEV(\"canvas\", {\n    id: \"shipment-eval-bar\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 113,\n    columnNumber: 12\n  }, this);\n}\n_s(ShipmentEvalBar, \"zC4eqcLmydhJEWHqkbmtnuaIL5s=\");\n_c = ShipmentEvalBar;\nexport default ShipmentEvalBar;\nvar _c;\n$RefreshReg$(_c, \"ShipmentEvalBar\");","map":{"version":3,"names":["React","useState","useEffect","apiServiceInstance","Chart","registerables","jsxDEV","_jsxDEV","register","ShipmentEvalBar","_s","evalList","setEvalList","getShipmentEval","then","response","console","log","data","map","line","time","shipment","operation","split","filterCreateOperation","filter","evaluation","getMinMaxTime","createOperations","times","minTime","Math","min","maxTime","max","length","formatData","ctx","document","getElementById","getContext","type","options","scales","y","beginAtZero","title","display","text","x","plugins","legend","labels","font","size","tooltip","callbacks","label","context","dataset","parsed","datasets","reduce","acc","curr","parseFloat","sqrt","pow","backgroundColor","borderColor","borderWidth","id","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/daniellundquist/Documents/Bachelor-gruppe-3/webapp/src/frontend/components/ShipmentEvalBar.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport apiServiceInstance from \"../APIService\";\nimport { Chart, registerables } from \"chart.js\";\n\nChart.register(...registerables);\n\nfunction ShipmentEvalBar() {\n    const [evalList, setEvalList] = useState([]);\n\n    useEffect(() => {\n        // Fetch data from API endpoint\n        apiServiceInstance.getShipmentEval().then((response) => {\n            console.log(response.data);\n            setEvalList(\n                response.data.map((line) => {\n                    const [time, shipment, operation] = line.split(\", \");\n                    return { time, shipment, operation };\n                })\n            );\n        });\n    }, []);\n\n    function filterCreateOperation(evalList) {\n        return evalList.filter((evaluation) => evaluation.operation === \"create\");\n    }\n\n    function getMinMaxTime(evalList) {\n        const createOperations = filterCreateOperation(evalList);\n        const times = createOperations.map((evaluation) => evaluation.time);\n        const minTime = Math.min(...times);\n        const maxTime = Math.max(...times);\n        return { minTime, maxTime };\n    }\n\n    useEffect(() => {\n        if (evalList.length > 0) {\n            const data = formatData(evalList);\n            const ctx = document.getElementById('shipment-eval-chart').getContext('2d');\n\n            new Chart(ctx, {\n                type: 'bar',\n                data: data,\n                options: {\n                    scales: {\n                        y: {\n                            beginAtZero: true,\n                            title: {\n                                display: true,\n                                text: 'Time (minutes)'\n                            }\n                        },\n                        x: {\n                            title: {\n                                display: true,\n                                text: 'Shipment'\n                            }\n                        }\n                    },\n                    plugins: {\n                        legend: {\n                            display: true,\n                            labels: {\n                                font: {\n                                    size: 14\n                                }\n                            }\n                        },\n                        tooltip: {\n                            callbacks: {\n                                label: function(context) {\n                                    var label = context.dataset.label || '';\n                                    if (label) {\n                                        label += ': ';\n                                    }\n                                    if (context.parsed.y !== null) {\n                                        label += context.parsed.y + ' minutes';\n                                    }\n                                    return label;\n                                }\n                            }\n                        }\n                    }\n                }\n            });\n        }\n    }, [evalList]);\n\n    function formatData(evalList) {\n        const data = {\n            labels: ['Minimum', 'Maximum', 'Average', 'Standard Deviation'],\n            datasets: [\n                {\n                    label: 'Time',\n                    data: [\n                        Math.min(...evalList.map((evaluation) => evaluation.time)),\n                        Math.max(...evalList.map((evaluation) => evaluation.time)),\n                        evalList.reduce((acc, curr) => acc + parseFloat(curr.time), 0) / evalList.length,\n                        Math.sqrt(\n                            evalList\n                                .map((evaluation) => parseFloat(evaluation.time))\n                                .reduce((acc, curr) => acc + Math.pow(curr - (evalList.reduce((acc, curr) => acc + parseFloat(curr.time), 0) / evalList.length), 2), 0) / evalList.length\n                        ),\n                    ],\n                    backgroundColor: 'rgb(75, 192, 192)',\n                    borderColor: 'rgb(75, 192, 192)',\n                    borderWidth: 1,\n                },\n            ],\n        };\n        return data;\n    }\n\n    return <canvas id=\"shipment-eval-bar\"></canvas>;\n\n\n}\n\nexport default ShipmentEvalBar;\n\n\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}